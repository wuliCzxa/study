
实验定义 = {

名称 = "实验1  A，W寄存器实验"

连线 = {
  {67, 68},  ; J1    <--> J3
  {38, 3 },  ; AEN   <--> K3
  {39, 4 },  ; WEN   <--> K4
  {37, 50}   ; ALUCK <--> CLOCK
}

操作 = {
  {'00000000 11111111 00000000 00000000', '11111111 01010101 00000000 00011000', "DBUS[7..0]置为55H"},
  {'00000000 00000000 00000000 00011000', '11111111 01010101 00000000 00010000', "置K3(AEN)为0, 允计打入A寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01010101 00000000 00010000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器A的黄色指示灯亮，表明选择A寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01010101 00000000 00010000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据55H被写入A寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 01100110 00000000 00011000', "DBUS[7..0]置为66H"},
  {'00000000 00000000 00000000 00011000', '11111111 01100110 00000000 00001000', "置K4(WEN)为0, 允计打入W寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01100110 00000000 00001000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器W的选择指示灯亮，表明选择W寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01100110 00000000 00001000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据66H被写入W寄存器"}
}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，将数据写入寄存器A，W。
}

目的 = {
了解模型机中A, W寄存器结构、工作原理及其控制方法
}

说明 = {
寄存器的作用是用于保存数据的，因为我们的模型机
是8位的，因此在本模型机中大部寄存器是8位的，
标志位寄存器(Cy, Z)是二位的。

注意：1. 数据是在放开CLOCK键后改变的，
         也就是CLOCK的上升沿数据被打入。
      2. 当允许打入信号为高时，即使CLOCK有上升沿，
         寄存器的数据也不会改变。
}

电路    = "A.JPG"
波形    = "AW.JPG"

}


实验定义 = {

名称 = "实验2  R0，R1，R2，R3寄存器实验"

连线 = {
  {67, 68},  ; J1    <--> J3
  {26, 11},  ; RRD   <--> K11
  {27, 10},  ; RWR   <--> K10
  {25,  1},  ; SB    <--> K1
  {24,  0},  ; SA    <--> K0
  {28, 50}   ; RCK   <--> CLOCK
}

操作 = {
  {'00000000 11111111 00000000 00000000', '11111111 00010001 00000000 00000000', "DBUS[7..0]置为11H"},
  {'00000000 00000000 00001100 00000011', '11111111 00010001 00001000 00000000', "置K1(SB),K0(SA)为00, 选择R0，K10(RWR)为0，允许写入寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00010001 00001000 00000000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器R0的黄色指示灯亮，表明选择寄存器R0"},
  {'11000000 00000000 00000000 00011000', '01111111 00010001 00001000 00000000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据11H被写入寄存器R0"},

  {'00000000 11111111 00000000 00000000', '11111111 00100010 00000000 00000000', "DBUS[7..0]置为22H"},
  {'00000000 00000000 00001100 00000011', '11111111 00100010 00001000 00000001', "置K1(SB),K0(SA)为01, 选择R0，K10(RWR)为0，允许写入寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00100010 00001000 00000001', "按住CLOCK脉冲键，CLOCK由高变低，寄存器R1的黄色指示灯亮，表明选择寄存器R1"},
  {'11000000 00000000 00000000 00011000', '01111111 00100010 00001000 00000001', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据11H被写入寄存器R1"},

  {'00000000 11111111 00000000 00000000', '11111111 00110011 00000000 00000000', "DBUS[7..0]置为33H"},
  {'00000000 00000000 00001100 00000011', '11111111 00110011 00001000 00000010', "置K1(SB),K0(SA)为10, 选择R2，K10(RWR)为0，允许写入寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00110011 00001000 00000010', "按住CLOCK脉冲键，CLOCK由高变低，寄存器R2的黄色指示灯亮，表明选择寄存器R2"},
  {'11000000 00000000 00000000 00011000', '01111111 00110011 00001000 00000010', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据11H被写入寄存器R2"},

  {'00000000 11111111 00000000 00000000', '11111111 01000100 00000000 00000000', "DBUS[7..0]置为44H"},
  {'00000000 00000000 00001100 00000011', '11111111 01000100 00001000 00000011', "置K1(SB),K0(SA)为11, 选择R3，K10(RWR)为0，允许写入寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01000100 00001000 00000011', "按住CLOCK脉冲键，CLOCK由高变低，寄存器R3的黄色指示灯亮，表明选择寄存器R3"},
  {'11000000 00000000 00000000 00011000', '01111111 01000100 00001000 00000011', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据44H被写入寄存器R3"},

  {'00000000 00000000 00001100 00000011', '11111111 00000000 00000100 00000000', "置K1(SB),K0(SA)为00, 选择R0，K11(RRD)为0，允许读寄存器。液晶显示 DBUS: 11  00010001"},
  {'00000000 00000000 00000000 00000011', '11111111 00000000 00000100 00000001', "置K1(SB),K0(SA)为01, 选择R1，K11(RRD)为0，允许读寄存器。液晶显示 DBUS: 22  00100010"},
  {'00000000 00000000 00000000 00000011', '11111111 00000000 00000100 00000010', "置K1(SB),K0(SA)为10, 选择R2，K11(RRD)为0，允许读寄存器。液晶显示 DBUS: 33  00110011"},
  {'00000000 00000000 00000000 00000011', '11111111 00000000 00000100 00000011', "置K1(SB),K0(SA)为11, 选择R3，K11(RRD)为0，允许读寄存器。液晶显示 DBUS: 44  01000100"}
}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，对数据寄存器组R0..R3进行读写
}

目的 = {
了解模型机中寄存器组R0..R3结构、工作原理及其控制方法
}

说明 = {
寄存器的作用是用于保存数据的，因为我们的模型机
是8位的，因此在本模型机中大部寄存器是8位的，
标志位寄存器(Cy, Z)是二位的。

注意：1. 数据是在放开CLOCK键后改变的，
         也就是CLOCK的上升沿数据被打入。
      2. 当允许打入信号为高时，即使CLOCK有上升沿，
         寄存器的数据也不会改变。
}

电路    = "R.JPG"
波形    = "RW.JPG"

}

实验定义 = {

名称 = "实验3：MAR地址寄存器，ST堆栈寄存器，OUT输出寄存器"

连线 = {
  {68, 69},  ; J2    <--> J3
  {52, 14},  ; MAROE <--> K14
  {53, 15},  ; MAREN <--> K15
  {61, 12},  ; STEN  <--> K12
  {64, 13},  ; OUTEN <--> K13
  {54, 50},  ; MARCK <--> CLOCK
  {62, 50},  ; STCK  <--> CLOCK
  {63, 50}   ; OUTCK <--> CLOCK
}

操作 = {
  {'00000000 11111111 00000000 00000000', '11111111 00010010 00000000 00000000', "DBUS[7..0]置为12H"},
  {'00000000 00000000 11110000 00000000', '11111111 00010010 01110000 00000000', "置K15(MAREN)为0, 允计打入MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00010010 01110000 00000000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器MAR的黄色指示灯亮，表明选择MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00010010 01110000 00000000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据12H被写入MAR寄存器"},
  {'00000000 00000000 01000000 00000000', '01111111 00010010 00110000 00000000', "置K15(MAREN)为0, 允计MAR寄存器输出，MAR红色输出指示灯亮"},

  {'00000000 11111111 00000000 00000000', '11111111 00110100 00000000 00000000', "DBUS[7..0]置为34H"},
  {'00000000 00000000 11110000 00000000', '11111111 00110100 11100000 00000000', "置K12(STEN)为0, 允计打入ST寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00110100 11100000 00000000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器ST的黄色指示灯亮，表明选择ST寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00110100 11100000 00000000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据34H被写入ST寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 01010110 00000000 00000000', "DBUS[7..0]置为56H"},
  {'00000000 00000000 11110000 00000000', '11111111 01010110 11100000 00000000', "置K13(OUTEN)为0, 允计打入OUT寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01010110 11100000 00000000', "按住CLOCK脉冲键，CLOCK由高变低，寄存器OUT的黄色指示灯亮，表明选择OUT寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01010110 11100000 00000000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据56H被写入OUT寄存器"}

}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，将数据写入地址寄存器MAR，
堆栈寄存器ST，输出寄存器OUT。
}

目的 = {
了解模型机中地址寄存器MAR，堆栈寄存器ST，
输出寄存器OUT寄存器结构、工作原理及其控制方法
}

说明 = {
寄存器的作用是用于保存数据的，因为我们的模型机
是8位的，因此在本模型机中大部寄存器是8位的，
标志位寄存器(Cy, Z)是二位的。

注意：1. 数据是在放开CLOCK键后改变的，
         也就是CLOCK的上升沿数据被打入。
      2. 当允许打入信号为高时，即使CLOCK有上升沿，
         寄存器的数据也不会改变。
}

;电路    = "DL3.JPG"
;波形    = "BX3.JPG"

}


实验定义 = {

名称 = "实验4  运算器实验"

连线 = {
  {67, 68},  ; J1    <--> J3
  {36,  0},  ; S0    <--> K0
  {35,  1},  ; S1    <--> K1
  {34,  2},  ; S2    <--> K2
  {38,  3},  ; AEN   <--> K3
  {39,  4},  ; WEN   <--> K4
  {32,  5},  ; CyIn  <--> K5
  {37, 50}   ; ALUCK <--> CLOCK
}

操作 = {
  {'00000000 11111111 00000000 00000000', '11111111 01010101 00000000 00000000', "DBUS[7..0]置为55H"},
  {'00000000 00000000 00000000 00111111', '11111111 01010101 00000000 00010000', "置K3(AEN)为0, 允计打入A寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01010101 00000000 00010000', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器A的黄色选择指示灯亮，表明选择A寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01010101 00000000 00010000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据55H被写入A寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 00110011 00000000 00000000', "DBUS[7..0]置为33H"},
  {'00000000 00000000 00000000 00111111', '11111111 00110011 00000000 00001000', "置K4(WEN)为0, 允计打入W寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 00110011 00000000 00001000', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器W的黄色选择指示灯亮，表明选择W寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00110011 00000000 00001000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据66H被写入W寄存器"},

  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011000', "置K2K1K0(S210)为000, 加运算，结果(直通门D)为88H"},
  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011001', "置K2K1K0(S210)为001, 减运算，结果(直通门D)为22H"},
  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011010', "置K2K1K0(S210)为010, 或运算，结果(直通门D)为77H"},
  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011011', "置K2K1K0(S210)为011, 与运算，结果(直通门D)为11H"},
  {'00000000 00000000 00000000 00100111', '11111111 00110011 00000000 00011100', "置K2K1K0(S210)为100, 带进位加运算，结果(直通门D)为88H"},
  {'00000000 00000000 00000000 00100111', '11111111 00110011 00000000 00111100', "置K2K1K0(S210)为100, 带进位加运算，结果(直通门D)为89H"},
  {'00000000 00000000 00000000 00100111', '11111111 00110011 00000000 00011101', "置K2K1K0(S210)为101, 带进位减运算，结果(直通门D)为22H"},
  {'00000000 00000000 00000000 00100111', '11111111 00110011 00000000 00111101', "置K2K1K0(S210)为101, 带进位减运算，结果(直通门D)为21H"},
  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011110', "置K2K1K0(S210)为110, 取反运算，结果(直通门D)为AAH"},
  {'00000000 00000000 00000000 00000111', '11111111 00110011 00000000 00011111', "置K2K1K0(S210)为111, 输出A，结果(直通门D)为55H"}
}

要求 = {
利用COP2000实验仪的K16..K23开关做为DBUS数据，
其它开关做为控制信号，将数据写累加器A和工作
寄存器W，并用开关控制ALU的运算方式，实现运
算器的功能。
}

目的 = {
了解模型机中算术、逻辑运算单元的控制方法
}

说明 = {
COP2000中的运算器由一片可编程芯片EPLD实现。
有8种运算, 通过S2,S1,S0来选择。运算数据由
寄存器A及寄存器W给出, 运算结果输出到直通门D。
有兴趣的同学可以参考第76页实现本ALU功能的
ABEL语言。了解ALU的实现方法。

S2 S1 S0  功能
 0  0  0   A+W     加
 0  0  1   A-W     减
 0  1  0   A|W     或
 0  1  1   A&W     与
 1  0  0   A+W+C   带进位加
 1  0  1   A-W-C   带进位减
 1  1  0   ~A      A取反
 1  1  1   A       输出A

注意：
  运算器在加上控制信号及数据(A,W)后,
  立刻给出结果, 不须时钟。

}

;电路    = "ALU.JPG"
;波形    = "ALUW.JPG"

}


实验定义 = {

名称 = "实验5  数据输出实验"

连线 = {
  {67, 68},  ; J1    <--> J3
  {36,  0},  ; S0    <--> K0
  {35,  1},  ; S1    <--> K1
  {34,  2},  ; S2    <--> K2
  {38,  3},  ; AEN   <--> K3
  {29,  5},  ; X0    <--> K5
  {30,  6},  ; X1    <--> K6
  {31,  7},  ; X2    <--> K7
  {32,  8},  ; CyIN  <--> K8
  {33,  9},  ; CN    <--> K9
  {37, 50}   ; ALUCK <--> CLOCK
}

操作 = {
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 00000000', "X210置为000，IN输出指示灯亮，IN输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 00100000', "X210置为001，IA输出指示灯亮，中断向量输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 01000000', "X210置为010，ST输出指示灯亮，堆栈值输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 01100000', "X210置为011，PC输出指示灯亮，PC值输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 10000000', "X210置为100，D直通门输出指示灯亮，ALU直通门输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 10100000', "X210置为101，R右移门输出指示灯亮，ALU右移门输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 11000000', "X210置为110，L左移门输出指示灯亮，ALU左移门输出到总线"},
  {'00000000 00000000 00000000 11100000', '11111111 00000000 00000000 11100000', "X210置为111，没有输出，总线浮空"}
}

要求 = {
利用COP2000实验仪的开关做为控制信号，
将指定寄存器的内容读到数据总线DBUS上
}

目的 = {
了解模型机中多寄存器接数据总线的实现原理
}

说明 = {
COP2000中有7个寄存器可以向数据总线输出数据,
但在某一特定时刻只能有一个寄存器输出数据。
由X2,X1,X0决定那一个寄存器输出数据
}

电路    = "XXX.JPG"
;波形    = "XXXW.JPG"

}


实验定义 = {

名称 = "实验6  移位实验"

连线 = {
  {67, 68},  ; J1    <--> J3
  {36,  0},  ; S0    <--> K0
  {35,  1},  ; S1    <--> K1
  {34,  2},  ; S2    <--> K2
  {38,  3},  ; AEN   <--> K3
  {29,  5},  ; X0    <--> K5
  {30,  6},  ; X1    <--> K6
  {31,  7},  ; X2    <--> K7
  {32,  8},  ; CyIN  <--> K8
  {33,  9},  ; CN    <--> K9
  {37, 50}   ; ALUCK <--> CLOCK
}

操作 = {
  {'00000000 11111111 00000000 00000000', '11111111 01010101 00000000 00011000', "DBUS[7..0]置为55H"},
  {'00000000 00000000 00000000 00001111', '11111111 01010101 00000000 00000111', "置K3(AEN)为0, 允计打入A寄存器"},
  {'11000000 00000000 00000000 00000000', '10111111 01010101 00000000 00000111', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器A的黄色选择指示灯亮，表明选择A寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01010101 00000000 00000111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据55H被写入A寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 01100110 00000000 00000111', "观察D直通门, L左移门，R左移门，结果应为55H, AAH, 2AH。"}
}

要求 = {
利用COP2000实验仪的开关做为控制信号，
实现移位运算
}

目的 = {
了解移位功能的实现方法
}

说明 = {
移位与输出门是否打开无关，无论运算器结果如何，
移位门都会给出移位结果。但究竟把那一个结果送
数据总线由X2X1X0输出选择决定。
}

;电路    = "DL6.JPG"
;波形    = "BX6.JPG"

}


实验定义 = {

名称 = "实验7  微程序计数器uPC实验"

连线 = {
  {68, 69},  ; J2    <--> J3
  {65,  0},  ; IREN  <--> K0
  {58,  1},  ; EMEN  <--> K1
  {57,  2},  ; EMWR  <--> K2
  {56,  3},  ; EMRD  <--> K3
  {66, 50}   ; IRCK  <--> CLOCK
}

操作 = {
  {'00000000 00000000 00000000 00001111', '11111111 00000000 00000000 00001111', "置K3210为0000，每按一次CLOCK，uPC加一"},
  {'00000000 11111111 00000000 00000000', '11111111 00010010 00000000 00000000', "DBUS[7..0]置为12H"},
  {'00000000 00000000 00000000 00001111', '11111111 00010010 00000000 00001000', "置K3210为1000，uPC打入方式"},
  {'11000000 00000000 00000000 00000000', '10111111 01010101 00000000 00010000', "按住CLOCK脉冲键，CLOCK由高变低，这时IR寄存器的黄色选择指示灯亮，表时打入uPC, IR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 01010101 00000000 00010000', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据10H被写入uPC寄存器"}
}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，实现微程序计数器uPC的写入
和加1功能。
}

目的 = {
1. 了解模型机中微程序的基本概念。
2. 了解uPC的结构、工作原理及其控制方法
}

说明 = {

74HC161是一片带预置的4位二进制记数器。功能如下：

  当 RST = 0时，记数器被清0
  当IREN = 0时，在CK的上升沿，预置数据被打入记数器
  当IREN = 1时，在CK的上升沿，记数器加一

  TC为进位，当记数到F（1111）时，TC=1
  CEP，CET为记数使能，当CEP，CET=1时，记数器工作，
  CEP，CET=0时，记数器保持原记数值

}

电路    = "uPC.JPG"
波形    = "uPCW.JPG"

}


实验定义 = {

名称 = "实验8  PC实验"

连线 = {
  {68, 69},  ; J2    <--> J3
  {43,  0},  ; ELP   <--> K0
  {42,  1},  ; JRC   <--> K1
  {41,  2},  ; JRZ   <--> K2
  {44,  3},  ; JIR2  <--> K3
  {45,  4},  ; JIR3  <--> K4
  {59,  5},  ; PCOE  <--> K5
  {60, 50}   ; PCCK  <--> CLOCK
}

操作 = {
  {'00000000 00000000 00000000 00100001', '11111111 00000000 00000000 00000001', "置K5(PCOE)为0，置K0(ELP)为1，每按一次CLOCK键, PC加一"},
  {'00000000 11111111 00000000 00000000', '11111111 00010010 00000000 00000000', "DBUS[7..0]置为12H"},
  {'00000000 00000000 00000000 00000001', '11111111 01010101 00000000 00000001', "置K0(ELP)为1, 黄色PC预置指示灯不亮，不允计打入PC"},
  {'00000000 00000000 00000000 00011011', '11111111 01010101 00000000 00000010', "置K0(ELP)为0，K1(JRC)为1，黄色PC预置指示灯亮，允计打入PC"},
  {'00000000 00000000 00000000 00011011', '11111111 01010101 00000000 00000000', "置K0(ELP)为0, K1(JRC)为0，黄色PC预置指示灯不亮，不允计打入PC"},
  {'00000000 00000000 00000000 00011101', '11111111 01010101 00000000 00001100', "置K0(ELP)为0, K2(JRZ)为1，黄色PC预置指示灯亮，允计打入PC"},
  {'00000000 00000000 00000000 00011101', '11111111 01010101 00000000 00001000', "置K0(ELP)为0, K2(JRZ)为0，黄色PC预置指示灯不亮，不允计打入PC"},
  {'00000000 00000000 00000000 00010001', '11111111 01010101 00000000 00001000', "置K0(ELP)为0, K4(IR3)为1，黄色PC预置指示灯亮，允计打入PC"}
}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，实现程序计数器PC的写入及加1功能
}

目的 = {
1. 了解模型机中程序计数器PC的工作原理及其控制方法。
2. 了解程序执行过程中跳转指令的实现方法。
}

说明 = {
PC是由两片74HC161构成的八位带预置记数器，预置数据来
自数据总线。记数器的输出通过74HC245（PCOE）送到地址
总线。PC值还可以通过74HC245（PCOE_D）送回数据总线。

在COP2000中，PC+1由PCOE取反产生。

  当RST  = 0时，PC记数器被清0
  当LDPC = 0时，在CK的上升沿，预置数据被打入PC记数器
  当PC+1 = 1时，在CK的上升沿，PC记数器加一
  当PCOE = 0时，PC值送数据总线

当ELP=1时，LDPC=1，不允许PC被预置
当ELP=0时，LDPC由IR3，IR2，Cy，Z确定
  当IR3 IR2 = 1 X时，LDPC=0，PC被预置
  当IR3 IR2 = 0 0时，LDPC=非Cy，当Cy=1时，PC被预置
  当IR3 IR2 = 0 1时，LDPC=非Z，当Z=1时，PC被预置

}

电路    = "PC.JPG"
;波形    = "PCW.JPG"

}


实验定义 = {

名称 = "实验9  存储器EM实验"

连线 = {
  {68, 69},  ; J2    <--> J3
  {57,  0},  ; EMWR  <--> K0
  {56,  1},  ; EMRD  <--> K1
  {58,  2},  ; EMEN  <--> K2
  {53,  3},  ; MAREN <--> K3
  {52,  4},  ; MAROE <--> K4
  {59,  5},  ; PCOE  <--> K5
  {65,  6},  ; IREN  <--> K6
  {60, 50}   ; PCCK  <--> CLOCK
}

操作 = {
  {'00000000 00000000 00000000 00110000', '11111111 00000000 00000000 00010000', "PC输出地址, PC地址输出指示灯亮"},
  {'00000000 00000000 00000000 00110000', '11111111 00000000 00000000 00100000', "MAR输出地址, MAR地址输出指示灯亮"},
  {'00000000 00000000 00000000 00110000', '11111111 00000000 00000000 00110000', "地址总线浮空"},
  {'00000000 00000000 00000000 00110000', '11111111 00000000 00000000 00000000', "错误, PC及MAR同时输出, PC及MAR地址输出指示灯亮"},

  {'00000000 11111111 00000000 01111111', '11111111 00000000 00000000 01111111', "DBUS[7..0]置为00H"},
  {'00000000 00000000 00000000 00001000', '10111111 00000000 00000000 01110111', "置K3(MAREN)为0，允许打入MAR"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器MAR的黄色指示灯亮，表明选择MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据00H被写入MAR寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 00010001 00000000 01111111', "DBUS[7..0]置为11H"},
  {'00000000 00000000 00000000 01111111', '10111111 00000000 00000000 01101010', "置K4(MAROE),K2(EMEN),K0(EMWR)为0，允许写入EM，地址由MAR提供"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，写入EM"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据11H被写入EM[0]"},

  {'00000000 11111111 00000000 01111111', '11111111 00000001 00000000 01111111', "DBUS[7..0]置为01H"},
  {'00000000 00000000 00000000 00001000', '10111111 00000000 00000000 01110111', "置K3(MAREN)为0，允许打入MAR"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器MAR的黄色指示灯亮，表明选择MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据01H被写入MAR寄存器"},

  {'00000000 11111111 00000000 00000000', '11111111 00100010 00000000 01111111', "DBUS[7..0]置为22H"},
  {'00000000 00000000 00000000 01111111', '10111111 00000000 00000000 01101010', "置K4(MAROE),K2(EMEN),K0(EMWR)为0，允许写入EM，地址由MAR提供"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，写入EM"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据22H被写入EM[1]"},

  {'00000000 11111111 00000000 01111111', '11111111 00000000 00000000 01111111', "DBUS[7..0]置为00H"},
  {'00000000 00000000 00000000 00001000', '10111111 00000000 00000000 01110111', "置K3(MAREN)为0，允许打入MAR"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器MAR的黄色指示灯亮，表明选择MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据00H被写入MAR寄存器"},
  {'00000000 00000000 00000000 01111111', '10111111 00000000 00000000 01101101', "置K4(MAROE),K1(EMRD)为0，允许读出EM，地址由MAR提供。EM[0]值为11H"},
  {'00000000 00000000 00000000 01000000', '10111111 00000000 00000000 00101101', "置K6(IREN)为0，允许打入IR及uPC"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，寄存器IR黄色指示灯亮，表明选择IR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据11H被写入IR寄存器, 10H被写入uPC"},

  {'00000000 11111111 00000000 01111111', '11111111 00000001 00000000 01111111', "DBUS[7..0]置为01H"},
  {'00000000 00000000 00000000 00001000', '10111111 00000000 00000000 01110111', "置K3(MAREN)为0，允许打入MAR"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，这时寄存器MAR的黄色指示灯亮，表明选择MAR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据01H被写入MAR寄存器"},
  {'00000000 00000000 00000000 01111111', '10111111 00000000 00000000 01101101', "置K4(MAROE),K1(EMRD)为0，允许读出EM，地址由MAR提供。EM[0]值为22H"},
  {'00000000 00000000 00000000 01000000', '10111111 00000000 00000000 00101101', "置K6(IREN)为0，允许打入IR及uPC"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低，寄存器IR黄色指示灯亮，表明选择IR寄存器"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，数据22H被写入IR寄存器, 20H被写入uPC"}

}

要求 = {
利用COP2000实验仪上的K16..K23开关做为DBUS的数据，
其它开关做为控制信号，实现程序存储器EM的读写操作。
并将存储器EM读出的值打入IR指令寄存器/uPC实验
}

目的 = {
1. 了解模型机中程序存储器EM的工作原理及控制方法
2. 了解模型机中IR指令寄存器/uPC的打入方法
}

说明 = {
存储器EM由一片6116RAM构成，通过一片74HC245与数据
总线相连。存储器EM的地址可选择由PC或MAR提供。

存储器EM的数据输出直接接到指令总线IBUS，指令总线
IBUS的数据还可以来自一片74HC245。当ICOE为0时，
这片74HC245输出中断指令B8H
}

电路    = "EM.JPG"
;波形    = "EMW.JPG"

}


实验定义 = {

名称 = "实验10  微程序存储器uM实验"

连线 = {
  {68, 69},  ; J2    <--> J3
  {65,  0},  ; IREN  <--> K0
  {66, 50}   ; IRCK  <--> CLOCK
}

操作 = {
  {'00000000 00000000 00000000 00000001', '11111111 00000000 00000000 00000001', "uM输出uM[0]的数据"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，uPC加一，uM输出uM[1]的数据"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，uPC加一，uM输出uM[2]的数据"}
}

要求 = {
利用COP2000实验仪上的开关做为控制信号，
实现微程序存储器uM的输出功能。
}

目的 = {
1. 了解微程序控制方式模型机的基本工作原理。
2. 了解微程序存储器uM的控制方法。
}

说明 = {
存储器uM由三片6116RAM构成，共24位微指令。
存储器的地址由uPC提供, 片选及读信号恒为低, 写信号
恒为高. 存储器uM始终输出uPC指定地址单元的数据。
}

电路    = "uM.JPG"
;波形    = "uMW.JPG"

}

实验定义 = {

名称 = "实验11  中断实验"

连线 = {
  {68, 69},  ; J2    <--> J3
  {65,  0},  ; IREN  <--> K0
  {46,  1},  ; EINT  <--> K1
  {47, 51},  ; INT   <--> INT
  {48, 50}   ; CLOCK <--> CLOCK
}

操作 = {
  {'00110000 00000000 00000000 00000000', '11101111 00000000 00000000 00000011', "按住INT脉冲键，INT由高变低"},
  {'00110000 00000000 00000000 00000000', '11011111 00000000 00000000 00000011', "放开INT键，INT由低变高，产生一个上升沿，黄色IREQ指示灯亮, 表示有中断请求"},
  {'00000000 00000000 00000000 00000011', '11111111 00000000 00000000 00000010', "置K0(IREN)为0，表示要进行取指"},
  {'11000000 00000000 00000000 00000000', '10111111 00000000 00000000 01110111', "按住CLOCK脉冲键，CLOCK由高变低"},
  {'11000000 00000000 00000000 00000000', '01111111 00000000 00000000 01110111', "放开CLOCK键，CLOCK由低变高，产生一个上升沿，黄色中断响应IACK指示灯亮，同时B8输出红色指示灯"},
  {'00000000 00000000 00000000 00000011', '11111111 00000000 00000000 00000001', "置K1(EINT)为0，表示中断结束，清中断标志。IREQ，IACK灯灭"}
}

要求 = {
利用COP2000实验仪上的开关做控制信号，实现中断功能
}

目的 = {
了解模型机的中断功能的工作原理及中断过程中，
申请、响应、处理、返回各阶段时序。
}

说明 = {
中断电路有两个D触发器，分别用于保存中断请求信号(IREQ)
及中断响应信号(IACK)。INT有上升沿时，IREQ触发器被置为1。
当下一条指令取指时(IREN=0), 存贮器EM的读信号(EMRDP)被
关闭，同时产生读中断指令(ICEN)信号, 程序的执行被打断
转而去执行B8指令响应中断。在取B8的同时置IACK触发器被
置为1，禁止新的中断响应。

EINT信号置IACK，IREQ触发器为0，中断电路可以响应新的中断。
}

电路    = "INT.JPG"
;波形    = "INTW.JPG"

}


